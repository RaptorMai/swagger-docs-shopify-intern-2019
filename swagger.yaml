swagger: "2.0"
info:
  description: "This is the Shopify Backend Intern Task Demo---Online Marketplace Barebones"
  version: "1.0.0"
  title: "Zheda Mai Shopify Backend Intern Task Demo"

  contact:
    email: "zhedamai0126@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "marcomaishopify.herokuapp.com"
basePath: "/"
tags:
- name: "Products"
  description: "Information about the products"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/RaptorMai"
- name: "Cart"
  description: "Cart related action"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/RaptorMai"

schemes:
- "https"
- "http"
paths:
  /products:
    get:
      tags:
      - "Products"
      summary: "Get all products in the market"
      description: "This endpoints uses a get request to return all products"
      operationId: "findAllproducts"
      parameters:
      - name: "in_stock"
        in: "query"
        description: "Optional: Only shows products that are available"
        type: "string"
        enum:
          - "True"
      responses:
        200:
          description: "All products in the market"

  /products/{product_id}:
    get:
      tags:
      - "Products"
      summary: "Return the product with product_id"
      description: "This endpoints uses a get request to return the product with product_id"
      operationId: "findOneProduct"
      parameters:
      - name: "product_id"
        in: "path"
        description: "Id of the product"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Product with product_id"
        404:
          description: "No product with such id"
          
  /products/{product_id}/checkout:
    get:
      tags:
      - "Products"
      summary: "Checkout the product with product_id"
      description: "This endpoints uses a get request to checkout the product with product_id"
      operationId: "checkoutOneProduct"
      parameters:
      - name: "product_id"
        in: "path"
        description: "Id of the product"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Status of this transaction"
        404:
          description: "No product with such id"  
          
  /cart/add/{product_id}:
    get:
      tags:
      - "Cart"
      summary: "Add the product with product_id to cart"
      description: "Login in required for user to add item to cart, to simplify the process, we the put username and password as parameter"
      operationId: "addProduct"
      parameters:
      - name: "product_id"
        in: "path"
        description: "Id of the product"
        required: true
        type: "integer"
        format: "int64"
      - name: "quantity"
        in: "query"
        description: "Quantity of the product"
        required: true
        type: "integer"
        format: "int64"
      - name: "username"
        in: "query"
        description: "username"
        type: "string"
        required: true
        enum:
          - "test_user"
      - name: "password"
        in: "query"
        description: "password"
        required: true
        type: "string"
        enum:
          - "temp_password"
      responses:
        200:
          description: "add product with product_id"
        404:
          description: "No product with such id"

  /cart/checkout:
    get:
      tags:
      - "Cart"
      summary: "Check out your shooping cart"
      description: "Login in required for user to add item to cart, to simplify the process, we put the  username and password as parameters"
      operationId: "cartCheckout"
      parameters:
      - name: "username"
        in: "query"
        description: "username"
        type: "string"
        required: true
        enum:
          - "test_user"
      - name: "password"
        in: "query"
        description: "password"
        required: true
        type: "string"
        enum:
          - "temp_password"
      responses:
        200:
          description: "Request is proccess sucessfully"
        404:
          description: "You don't have a cart, add something before check out"

  
  /cart/showcart:
    get:
      tags:
      - "Cart"
      summary: "Show your shooping cart"
      description: "Login in required for user to add item to cart, to simplify the process, we put the  username and password as parameters"
      operationId: "showCart"
      parameters:
      - name: "username"
        in: "query"
        description: "username"
        type: "string"
        required: true
        enum:
          - "test_user"
      - name: "password"
        in: "query"
        description: "password"
        required: true
        type: "string"
        enum:
          - "temp_password"
      responses:
        200:
          description: "Show your shopping cart"
        404:
          description: "You don't have a cart, add something before check out"
          
  /cart/remove_item/{product_id}/:
    get:
      tags:
      - "Cart"
      summary: "Remove the product with product_id to cart"
      description: "Login in required for user to add item to cart, to simplify the process, we the username and password"
      operationId: "removeProduct"
      parameters:
      - name: "product_id"
        in: "path"
        description: "Id of the product"
        required: true
        type: "integer"
        format: "int64"
      - name: "quantity"
        in: "query"
        description: "Quantity of the product"
        required: true
        type: "integer"
        format: "int64"
      - name: "username"
        in: "query"
        description: "username"
        type: "string"
        required: true
        enum:
          - "test_user"
      - name: "password"
        in: "query"
        description: "password"
        required: true
        type: "string"
        enum:
          - "temp_password"
      responses:
        200:
          description: "The product is adjusted successfully in your shopping cart"
        404:
          description: "You don't have a cart, add something before check out or you don't have this product at your cart"        


definitions:
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      inventory_count:
        type: "integer"
        format: "int64"
      price:
        type: "number"
        format: "float"
  Cart:
    type: "object"
    properties:
      cart_id:
        type: "integer"
        format: "int64"
      customer:
        type: "object"
      total:
        type: "number"
        format: "float"
  Cart_item:
    type: "object"
    properties:
      cart_item_id:
        type: "integer"
        format: "int64"
      cart:
        type: "object"
      product:
        type: "object"
      quantity:
        type: "integer"
        format: "int64"
